import styled from "@emotion/styled";
import { ThemeProvider } from "@emotion/react";
import { Post } from "./post/post";
import { Header } from "../../components/header/header";
import { theme } from "../theme";

const MainComponent = styled.main`
  display: flex;
  justify-content: center;
`;

export const post1 = {
  id: 1,
  header: "Header",
  content: `Многие компании активно переносят свои данные в облако, обеспечивая тем самым гибкость и масштабируемость своих приложений. Но те, кто впервые пробуют облачные технологии, нередко сталкиваются с проблемой выбора правильного облачного хранилища под конкретную задачу. Какой тип диска подключить? Когда использовать объектное хранилище, а когда файловое? Какие преимущества и недостатки у каждого из них в облаке? Как можно использовать их совместно, чтобы улучшить утилизацию ресурсов?

  Я Хамзет Шогенов, архитектор облачной платформы Mail.ru Cloud Solutions, расскажу о системах хранения данных, доступных на нашей платформе, подробно остановлюсь на их технических характеристиках и оптимальных вариантах использования.
  
  `,
  author: "Author",
  date: new Date(),
  description: `Многие компании активно переносят свои данные в облако, обеспечивая тем самым гибкость и масштабируемость своих приложений. Но те, кто впервые пробуют облачные технологии, нередко сталкиваются с проблемой выбора правильного облачного хранилища под конкретную задачу. Какой тип диска подключить? Когда использовать объектное хранилище, а когда файловое? Какие преимущества и недостатки у каждого из них в облаке? Как можно использовать их совместно, чтобы улучшить утилизацию ресурсов?
  Я, Хамзет Шогенов, архитектор облачной платформы Mail.ru Cloud Solutions, расскажу о системах хранения данных, доступных на нашей платформе, подробно остановлюсь на их технических характеристиках и оптимальных вариантах использования.`,
  tags: ["tag1", "tag2"],
  img: "1.jpg",
};

export const Main = () => {
  const posts = [post1];
  return (
    <div>
      <ThemeProvider theme={theme}>
        <Header></Header>
        <MainComponent>
          {posts.map((post) => (
            <Post key={`${post.header}`} post={post}></Post>
          ))}
        </MainComponent>
      </ThemeProvider>
    </div>
  );
};
